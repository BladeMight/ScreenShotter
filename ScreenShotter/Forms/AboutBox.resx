<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>